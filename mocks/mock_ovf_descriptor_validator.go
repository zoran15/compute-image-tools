//  Copyright 2019 Google Inc. All Rights Reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleCloudPlatform/compute-image-tools/cli_tools/gce_ovf_import/domain (interfaces: OvfDescriptorValidatorInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	ovf_model "github.com/GoogleCloudPlatform/compute-image-tools/cli_tools/gce_ovf_import/ovf_model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockOvfDescriptorValidatorInterface is a mock of OvfDescriptorValidatorInterface interface
type MockOvfDescriptorValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOvfDescriptorValidatorInterfaceMockRecorder
}

// MockOvfDescriptorValidatorInterfaceMockRecorder is the mock recorder for MockOvfDescriptorValidatorInterface
type MockOvfDescriptorValidatorInterfaceMockRecorder struct {
	mock *MockOvfDescriptorValidatorInterface
}

// NewMockOvfDescriptorValidatorInterface creates a new mock instance
func NewMockOvfDescriptorValidatorInterface(ctrl *gomock.Controller) *MockOvfDescriptorValidatorInterface {
	mock := &MockOvfDescriptorValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockOvfDescriptorValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOvfDescriptorValidatorInterface) EXPECT() *MockOvfDescriptorValidatorInterfaceMockRecorder {
	return m.recorder
}

// ValidateOvfPackage mocks base method
func (m *MockOvfDescriptorValidatorInterface) ValidateOvfPackage(arg0 *ovf_model.Descriptor, arg1 string) (*ovf_model.Descriptor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateOvfPackage", arg0, arg1)
	ret0, _ := ret[0].(*ovf_model.Descriptor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateOvfPackage indicates an expected call of ValidateOvfPackage
func (mr *MockOvfDescriptorValidatorInterfaceMockRecorder) ValidateOvfPackage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateOvfPackage", reflect.TypeOf((*MockOvfDescriptorValidatorInterface)(nil).ValidateOvfPackage), arg0, arg1)
}
